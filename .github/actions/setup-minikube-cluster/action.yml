name: "Setup minikube cluster"
description: "Action which sets up minikube k8s cluster"

inputs:
  minikube_version:
    description: "Minikube version to use"
    required: false
    default: "v1.26.0"
  k8s_version:
    description: "Kubernetes version to be installed by minikube (if any)"
    required: false
    default: ""
  minikube_driver:
    description: "Minikube driver to use"
    required: false
    default: ""
  container_runtime:
    description: "Container runtime to use"
    required: false
    default: "docker"
  github_token:
    description: "Github token to use for communication with Github API to avoid rate limits"
    required: true

runs:
  using: "composite"
  steps:
    - name: Create minikube Kubernetes ${{ inputs.k8s_version }} Cluster
      id: create-minikube-cluster
      if: ${{ inputs.k8s_version != '' && inputs.k8s_version != 'v1.24.0' }}
      uses: manusa/actions-setup-minikube@f6ceea1a32df47f602b1345bd8ad7da7c5824cbf # v2.4.3
      with:
        minikube version: '${{ inputs.minikube_version }}'
        kubernetes version: '${{ inputs.k8s_version }}'
        github token: '${{ inputs.github_token }}'
        driver: '${{ inputs.minikube_driver }}'
        start args: '--container-runtime=${{ inputs.container_runtime }}'

    - name: Create minikube Kubernetes ${{ inputs.k8s_version }} Cluster
      id: create-minikube-cluster-124
      if: ${{ inputs.k8s_version != '' && inputs.k8s_version == 'v1.24.0' }}
      uses: manusa/actions-setup-minikube@f6ceea1a32df47f602b1345bd8ad7da7c5824cbf # v2.4.3
      with:
        minikube version: '${{ inputs.minikube_version }}'
        kubernetes version: '${{ inputs.k8s_version }}'
        github token: '${{ inputs.github_token }}'
        driver: '${{ inputs.minikube_driver }}'
        start args: ''

    - name: Print minikube environment info
      id: print-k8s-cluster-info
      if: ${{ inputs.k8s_version != '' }}
      shell: bash
      run: |
        echo "kubectl version"
        kubectl version
        echo ""
        echo "minikube addions"
        echo ""
        minikube addons list
        echo ""
        echo "kubectl get nodes"
        echo ""
        kubectl get nodes
        echo ""
        echo "kubectl cluster-info"
        echo ""
        kubectl cluster-info
        echo ""
        echo "kubectl get pods -A"
        echo ""
        kubectl get pods -A

        export NODE_NAME=$(kubectl get nodes -o jsonpath="{.items[0].metadata.name}")
        echo ""
        echo "kubectl describe node"
        echo ""
        kubectl describe node ${NODE_NAME}
