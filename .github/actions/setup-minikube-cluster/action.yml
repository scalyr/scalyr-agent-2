name: "Setup minikube cluster"
description: "Action which sets up minikube k8s cluster"

inputs:
  minikube_version:
    description: "Minikube version to use"
    required: false
    default: "v1.25.1"
  k8s_version:
    description: "Kubernetes version to be installed by minikube (if any)"
    required: false
    default: ""
  minikube_driver:
    description: "Minikube driver to use"
    required: false
    default: ""
  container_runtime:
    description: "Container runtime to use"
    required: false
    default: "docker"
  github_token:
    description: "Github token to use for communication with Github API to avoid rate limits"
    required: true

runs:
  using: "composite"
  steps:
    - name: Create minikube Kubernetes ${{ inputs.k8s_version }} Cluster
      id: create-minikube-cluster
      # TODO: Workaround until conditions are supported natively
      # See https://github.com/actions/runner/issues/834
      uses: ChristopherHX/conditional@b4a9649204f81002ec9a4ef7d4bf7d6b2ab7fa55
      with:
        if: ${{ inputs.k8s_version != '' }}
        step: |
          uses: manusa/actions-setup-minikube@f6ceea1a32df47f602b1345bd8ad7da7c5824cbf # v2.4.3
          with:
            minikube version: '${{ inputs.minikube_version }}'
            kubernetes version: '${{ inputs.k8s_version }}'
            github token: '${{ inputs.github_token }}'
            driver: '${{ inputs.minikube_driver }}'
            start args: '--container-runtime=${{ inputs.container_runtime }}'

    - name: Print minikube environment info
      id: print-k8s-cluster-info
      uses: ChristopherHX/conditional@b4a9649204f81002ec9a4ef7d4bf7d6b2ab7fa55
      with:
        if: ${{ inputs.k8s_version != '' }}
        step: |
          shell: bash
          run: |
            echo "kubectl version"
            kubectl version
            echo ""
            echo "minikube addions"
            echo ""
            minikube addons list
            echo ""
            echo "kubectl get nodes"
            echo ""
            kubectl get nodes
            echo ""
            echo "kubectl cluster-info"
            echo ""
            kubectl cluster-info
            echo ""
            echo "kubectl get pods -A"
            echo ""
            kubectl get pods -A

            export NODE_NAME=$(kubectl get nodes -o jsonpath="{.items[0].metadata.name}")
            echo ""
            echo "kubectl describe node"
            echo ""
            kubectl describe node ${NODE_NAME}
