name: "Init job matrices"
description: "This action accepts matrices for the jobs that are used in the agent-build workflow and excludes job that are must not be executed in mon-master runs."

inputs:
  images-to-build:
    description: "JSON-formatted matrix for images to build."
    required: true

  managed-packages-to-build:
    description: "JSON-formatted matrix for managed packages to build."
    required: true

  managed-packages-to-test:
    description: "JSON-formatted matrix for managed packages to test."
    required: true

outputs:
  pre_build_steps_matrix_json:
    description: "JSON-formatted job matrix for steps that has to be built in separate jobs."
    value: ${{ steps.get-job-matrices.outputs.pre_build_steps_matrix_json }}
  agent_image_build_matrix_json:
    description: "JSON-formatted job matrix to build images."
    value: ${{ steps.get-job-matrices.outputs.agent_image_build_matrix_json }}
  managed_packages_build_matrix_json:
    description: "JSON-formatted job matrix to build managed packages."
    value: ${{ steps.get-job-matrices.outputs.agent_managed_packages_build_matrix_json }}
  managed_packages_test_matrix_json:
    description: "JSON-formatted job matrix to build managed packages."
    value: ${{ steps.get-job-matrices.outputs.agent_managed_packages_test_matrix_json }}
  is_master_run:
    description: "Boolean flag that indicates (if true) that the workflow runs in master branch or in a pull request against it."
    value: ${{ steps.get-job-matrices.outputs.is_master_run }}
  to_publish:
    description: "Boolean flag that indicates (if true) that the build artifacts have to be published because the workflow runs in master branch or a 'production' tag."
    value: ${{ steps.get-job-matrices.outputs.to_publish }}

runs:
  using: "composite"
  steps:
    - name: Get job matrices.
      id: get-job-matrices
      shell: bash
      env:
        GITHUB_EVENT_NAME: ${{ github.event_name }}"
        GITHUB_BASE_REF: ${{ github.base_ref }}
        GITHUB_REF_TYPE: ${{ github.ref_type }}
        GITHUB_REF_NAME: ${{ github.ref_name }}
      run: |
        set -e
        
        cat <<EOT >> /tmp/images-build-matrix.json
        ${{ inputs.images-to-build }}
        EOT
        
        cat <<EOT >> /tmp/managed-packages-build-matrix.json
        ${{ inputs.managed-packages-to-build }}
        EOT
        
        cat <<EOT >> /tmp/managed-packages-test-matrix.json
        ${{ inputs.managed-packages-to-test }}
        EOT
        
        python3 agent_build_refactored/scripts/get_github_actions_job_matrices.py \
          --images-build-matrix-json-file /tmp/images-build-matrix.json \
          --managed-packages-build-matrix-json-file /tmp/managed-packages-build-matrix.json \
          --managed-packages-test-matrix-json-file /tmp/managed-packages-test-matrix.json \
          > /tmp/final_matrices.json


        echo "pre_build_steps_matrix_json=$(cat /tmp/final_matrices.json | jq -c '.pre_build_steps_matrix')" >> $GITHUB_OUTPUT
        echo "agent_image_build_matrix_json=$(cat /tmp/final_matrices.json | jq -c '.agent_image_build_matrix')" >> $GITHUB_OUTPUT
        echo "agent_managed_packages_build_matrix_json=$(cat /tmp/final_matrices.json | jq -c '.agent_managed_packages_build_matrix')" >> $GITHUB_OUTPUT
        echo "agent_managed_packages_test_matrix_json=$(cat /tmp/final_matrices.json | jq -c '.agent_managed_packages_test_matrix')" >> $GITHUB_OUTPUT
        echo "is_master_run=$(cat /tmp/final_matrices.json | jq -c '.is_master_run')" >> $GITHUB_OUTPUT
        echo "to_publish=$(cat /tmp/final_matrices.json | jq -c '.to_publish')" >> $GITHUB_OUTPUT

    - name: Print job matrices
      shell: bash
      run: |
        
        echo -n "Is master run: "
        echo '${{ steps.get-job-matrices.outputs.is_master_run }}' | jq --color-output
        
        echo -n "Is to publish: "
        echo '${{ steps.get-job-matrices.outputs.to_publish }}' | jq --color-output

        echo "Image pre-build steps job matrix: "
        echo '${{ steps.get-job-matrices.outputs.pre_build_steps_matrix_json }}' | jq --color-output
        
        echo "Image build job matrix: "
        echo '${{ steps.get-job-matrices.outputs.agent_image_build_matrix_json }}' | jq --color-output
        
        echo "Managed packages build job matrix: "
        echo '${{ steps.get-job-matrices.outputs.agent_managed_packages_build_matrix_json }}' | jq --color-output
        
        echo "Managed packages test job matrix: "
        echo '${{ steps.get-job-matrices.outputs.agent_managed_packages_test_matrix_json }}' | jq --color-output
