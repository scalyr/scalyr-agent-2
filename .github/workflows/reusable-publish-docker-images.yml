name: Publish Docker Images

on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: 3.8.12

    secrets:
      SCALYR_PROD_CLOUDTECH_TESTING_WRITE_TOKEN:
        required: true
      SCALYR_CLOUDTECH_TESTING_DEV_SCALYR_READ_API_KEY:
        required: true
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_PASSWORD:
        required: true

permissions:
  contents: read

env:
  DOCKER_BUILDKIT: 1
  # Set this variable to tell the agent build code that it runs in CI/CD and it needs to use caching.
  AGENT_BUILD_IN_CICD: "1"

concurrency: publish-release

jobs:
  publish-temp-release:
    name: Publish temporary tag (${{ matrix.image-type }}, ${{ matrix.image-distro-name }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image-type: [ "docker-json", "docker-syslog", "k8s" ]
        image-distro-name: [ "debian", "alpine" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2
        with:
          image: tonistiigi/binfmt:qemu-v6.2.0
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@15c905b16b06416d2086efa066dd8e3a35cc7f98 # v2.0.0
        with:
          driver-opts: network=host

      - name: Perform the build of the base docker image in the deployment.
        uses: ./.github/actions/perform-deployment
        with:
          deployment-name: ${{ matrix.image-type }}-${{ matrix.image-distro-name }}

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a  # v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push image using the a temporary tag
        run: |
          # Push result docker image with a special tag "_temp_release".
          # The next job will "re-tag" that image to an appropriate one.
          # That is done to guarantee that the real, production tag only pushed when all job are succeeded.
          python3 build_package_new.py "${{ matrix.image-type }}-${{ matrix.image-distro-name }}" \
            --push \
            --user "${{ secrets.DOCKER_HUB_USERNAME }}" \
            --tag "_temp_release-${{ matrix.image-distro-name }}"

      - name: Notify Slack on Failure
        if: ${{ failure() && github.ref_name == 'master' }}
        uses: act10ns/slack@ed1309ab9862e57e9e583e51c7889486b9a00b0f # v2.0.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#eng-dataset-cloud-tech'

  publish-release:
    needs: [ publish-temp-release ]
    name: Publish Docker Image - ${{ matrix.image-type }}-${{ matrix.image-distro-name }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a  # v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Publish real image tags
        run: |
          python3 scripts/cicd/publish-docker-images-tags.py \
            --git-ref-name ${{ github.ref_name }} \
            --git-ref-type ${{ github.ref_type }} \
            --git-commit-sha ${{ github.sha }} \
            --user ${{ secrets.DOCKER_HUB_USERNAME }} \
            --ignore-errors

      - name: Notify Slack on Failure
        if: ${{ failure() && github.ref_name == 'master' }}
        uses: act10ns/slack@ed1309ab9862e57e9e583e51c7889486b9a00b0f # v2.0.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#eng-dataset-cloud-tech'
