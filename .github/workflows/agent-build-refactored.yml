name: Agent Build Refactored

on:
  push:
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 4 * * *'

permissions:
  contents: read

env:
  DOCKER_BUILDKIT: 1
  # Set this variable to tell the agent build code that it runs in CI/CD and it needs to use caching.
  AGENT_BUILD_IN_CICD: "1"

# This job skips another workflows with identical content and also generates strategy matrices for all further jobs.
# Since we can do a "master" run (on push and PR to a master branch) and "non-master" run, it generates matrices with different
#  size according to that information.
jobs:
  pre_job:
    runs-on: ubuntu-20.04
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      # The following outputs will be used by the other jobs below as their strategy matrices.
      pre_build_steps_matrix_json: ${{ steps.init-matrices.outputs.pre_build_steps_matrix_json }}
      agent_image_build_matrix_json: ${{ steps.init-matrices.outputs.agent_image_build_matrix_json }}

    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@f11521568414503656a5af807dc3018c012552c4 # v4.0.0
        with:
          cancel_others: 'true'
          concurrent_skipping: 'same_content'
          do_not_skip: '["workflow_dispatch", "schedule", "pull_request"]'
          github_token: ${{ github.token }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8.13"

      - name: Init job matrices
        uses: ./.github/actions/init-job-matrices
        id: init-matrices
        with:

          # In this action we define all our job matrices. It filters out jobs that must not be executed if
          # workflow run is not from the 'master' branch or from PR to the 'master' branch.
          # Jobs that has to be in a non-master workflow run has to have a '"master_run_only": false' field.
          # In the 'non-master' runs we only build debian-based images.
          images-to-build: |
            [
              { "name": "docker-json-debian", "master_run_only": false },
              { "name": "docker-syslog-debian", "master_run_only": false },
              { "name": "docker-api-debian", "master_run_only": false },
              { "name": "k8s-debian", "master_run_only": false },
              { "name": "docker-json-alpine", "master_run_only": true },
              { "name": "docker-syslog-alpine", "master_run_only": true },
              { "name": "docker-api-alpine", "master_run_only": true },
              { "name": "k8s-alpine", "master_run_only": true }
            ]

  # This job pre-executes and caches Runner steps that has to be executed in a separate job.
  # For example, we build platform-specific base docker images in a separate jobs to reduce overall build time, because
  # some of base images are built with using QEMU.
  pre-build-cached-step:
    name: ${{ matrix.name }}
    if: ${{ needs.pre_job.outputs.should_skip != 'true' || (github.ref == 'refs/heads/master' || github.base_ref == 'master') }}
    needs:
      - pre_job

    runs-on: ${{ matrix.os }}
    strategy:
      # This job receives its matrix from the 'pre_job' job. The matrix itself is created by the .github/actions/init-job-matrices action.
      # The matrix, for now, consists only from the 'include' part with following fields:
      #   "name": Name of the build job. (Not used in actiual build process, but just gives meaningful name to the job).
      #   "step-runner-fqdn": Fully qualified name of the builder class that has to run the cached step.
      #   "python-version": Version of python to setup on this runner. (NOTE: version of python used in images may differ, and it specified in the source code.)
      #   "os": Runner OS.
      matrix: ${{ fromJSON(needs.pre_job.outputs.pre_build_steps_matrix_json) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # v2.0.0
        with:
          driver-opts: network=host

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2
        with:
          image: tonistiigi/binfmt:qemu-v6.2.0
          platforms: all

      - name: Run cached step
        uses: ./.github/actions/execute-runner
        with:
          runner-fqdn: ${{ matrix.step-runner-fqdn }}


  build-images:
    name: Build image '${{ matrix.name }}'
    needs:
      - pre_job
      - pre-build-cached-step
    runs-on: ${{ matrix.os }}

    strategy:
      # This job receives its matrix from the 'pre_job' job. The matrix itself is created by the .github/actions/init-job-matrices action.
      # The matrix, for now, consists only from the 'include' part with following fields:
      #   "name": name of the builder that builds the target images.
      #   "master_run_only": If 'true' then it this package will be included only in a "master" workflow run.
      #
      #  The default values of these fields are generated by the .github/actions/init-job-matrices action, but they can be overwritten.
      #   "builder-fqdn": Fully qualified name of the builder to find its cached steps.
      #   "python-version": Version of python to set up on this runner. (NOTE: version of python used in images may differ, and it specified in the source code.)
      #   "os": Runner OS.
      matrix: ${{ fromJSON(needs.pre_job.outputs.agent_image_build_matrix_json) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2
        with:
          image: tonistiigi/binfmt:qemu-v6.2.0
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # v2.0.0
        with:
          driver-opts: network=host

      - name: Prepare everything that is needed by image builder '${{ matrix.name }}'
        uses: ./.github/actions/execute-runner
        with:
          runner-fqdn: ${{ matrix.builder-fqdn }}

      - name: Build image with builder '${{ matrix.name }}'
        run: |
          python3 build_package_new_refactored.py ${{ matrix.name }} \
            build --output-registry-dir /tmp/result

      - name: Save registry data root with result images as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}-registry
          path: /tmp/result
          retention-days: 1
