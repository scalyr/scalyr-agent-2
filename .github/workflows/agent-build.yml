# The main "setup" workflow, that calls other workflows.
name: Docker Images Build

on: [push]

permissions:
  contents: read

# Agent Docker image tests
#
# To test this workflow with your branch, make the following changes:
#
# 1. In this workflow, change ``@master`` to ``@your_branch_name`` - e.g. ``@docker_image_alpine``

# 2. In this workflow, change docker hub secrets to utilize testing and not prod account so images
#    get pushed to testing account. Change ``_PROD_` in the secret name to ``_TEST``,
#    e.g. ``DOCKER_HUB_USERNAME_TEST_ACCOUNT`` ``DOCKER_HUB_PASSWORD_TEST_ACCOUNT``.
#    Images for test account will get pushed to https://hub.docker.com/r/test4scalyr/.
#
# 3. In the job 'publish-images' below, change 'refs/heads/improve-caching-test' in the job conditional to you current branch.:
#
# For example: https://github.com/scalyr/scalyr-agent-2/pull/804/commits/0eccf278623552b51d9289d75a47794e88f02862
jobs:
  test-images:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        image-type: [ "docker-json", "docker-syslog", "docker-api", "k8s" ]
        image-distro-name: [ "debian", "alpine" ]
        python-version: [ "3.8.13" ]

    env:
      DOCKER_BUILDKIT: 1
      # Set this variable to tell the agent build code that it runs in CI/CD and it needs to use caching.
      AGENT_BUILD_IN_CICD: "1"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Perform the deployment of the test environment
        uses: ./.github/actions/perform-deployment
        with:
          deployment-name: "test_environment"

      - name: Sanity check deployments logic by running internal tests
        run: |
          python3 -m pytest agent_build/tools/tests

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # v2
        with:
          image: tonistiigi/binfmt:qemu-v6.2.0
          platforms: all

      - name: Perform the build of the base docker image in the deployment.
        uses: ./.github/actions/perform-deployment
        with:
          deployment-name: ${{ matrix.image-type }}-${{ matrix.image-distro-name }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # v2.0.0
        with:
          driver-opts: network=host

      - name: Start minikube for the test of the kubernetes build
        if: matrix.image-type == 'k8s' || matrix.image-type == 'k8s-with-openmetrics-monitor'
        shell: bash
        run: |
          minikube start

          echo ""
          echo "kubectl version"
          kubectl version
          echo ""
          echo "kubectl cluster-info"
          echo ""
          kubectl cluster-info

      - name: Run image test
        env:
          SCALYR_API_KEY: ${{ secrets.SCALYR_PROD_CLOUDTECH_TESTING_WRITE_TOKEN }}
        run: |
          python3 tests/package_tests/run_package_test.py package-test \
           "${{ matrix.image-type }}-${{ matrix.image-distro-name }}_test" \
            --name-suffix "_${{ github.run_number }}${{ github.run_attempt }}" \

      - name: Notify Slack on Failure
        # NOTE: github.ref is set to pr ref (and not branch name, e.g. refs/pull/28/merge) for pull
        # requests and that's why we need this special conditional and check for github.head_ref in
        # case of PRs
        if: ${{ failure() && (github.ref == 'refs/heads/master' || github.head_ref == 'master') }}
        uses: act10ns/slack@87c73aef9f8838eb6feae81589a6b1487a4a9e08 # v1.6.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#cloud-tech'

  publish-images:
    if: ${{ github.ref == 'refs/heads/master' || github.ref_type == 'tag' }}
    needs:
      - test-images

    uses: scalyr/scalyr-agent-2/.github/workflows/publish-docker-images.yml@master
    secrets:
      SCALYR_PROD_CLOUDTECH_TESTING_WRITE_TOKEN: ${{ secrets.SCALYR_PROD_CLOUDTECH_TESTING_WRITE_TOKEN }}
      SCALYR_CLOUDTECH_TESTING_DEV_SCALYR_READ_API_KEY: ${{ secrets.SCALYR_CLOUDTECH_TESTING_DEV_SCALYR_READ_API_KEY }}
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME_PROD_ACCOUNT }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD_PROD_ACCOUNT }}
