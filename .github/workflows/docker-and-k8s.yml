name: Build agent packages.

on:
  workflow_call:
    inputs:
      image-type:
        description: "Name of the image build type."
        required: true
        type: string
      python-version:
        required: false
        type: string
        default: 3.8.10
      publish:
        description: "If true, then the result image will be published on master branch or any tag."
        type: boolean
        required: false
        default: true

    secrets:
      SCALYR_PROD_CLOUDTECH_TESTING_WRITE_TOKEN:
        required: true
      SCALYR_CLOUDTECH_TESTING_DEV_SCALYR_READ_API_KEY:
        required: true

env:
  DOCKER_BUILDKIT: 1


jobs:
  # TODO move here tests from the CicleCi.
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install python.
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}

      - name: Perform the deployment of the test environment.
        uses: ./.github/actions/perform-deployment
        with:
          deployment-name: "test_environment"

      - name: Sanity check deployments logic by running internal tests.
        run: |
          python3 -m pytest agent_build/tools/tests

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:qemu-v6.1.0
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Start minikube for the test of the kubernetes build.
        if: inputs.image-type == 'k8s'
        shell: bash
        run: |
          minikube start

      - name: Get checksum of the base image files..
        run: |
          python3 build_package_new.py ${{ inputs.image-type }} --files-checksum > image_files_checksum.txt


      - name: Check for the docker buildx cache.
        uses: actions/cache@v2
        with:
          path: ~/docker-test-image-build-cache
          key: agent-docker-image-buildx-cache-${{ inputs.image-type }}-${{ hashFiles('image_files_checksum.txt') }}

      - name: Run image test.
        env:
            SCALYR_API_KEY: ${{ secrets.SCALYR_PROD_CLOUDTECH_TESTING_WRITE_TOKEN }}
        run: |

          mkdir -p ~/docker-test-image-build-cache
          # If cache exists, then it goes to the input of the build.
          mv ~/docker-test-image-build-cache ~/docker-test-image-build-cache-in
          # If cache does not exist, then create a new epty cache directory,
          # where a new build cache will be stored.
          mkdir -p ~/docker-test-image-build-cache

          python3 tests/package_tests/run_package_test.py package-test \
            ${{ inputs.image-type}}_test \
            --name-suffix "_${{ github.run_number }}${{ github.run_attempt }}" \
            --cache-from-dir ~/docker-test-image-build-cache-in \
            --cache-to-dir ~/docker-test-image-build-cache



#  publish:
#    needs: [test]
#    name: Publish image.
#    if: ${{ inputs.publish == true &&  (github.ref == 'refs/heads/master' || github.ref_type == 'tag') }}
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Set up QEMU
#        id: qemu
#        uses: docker/setup-qemu-action@v1
#        with:
#          image: tonistiigi/binfmt:qemu-v6.1.0
#          platforms: all
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#        with:
#          driver-opts: network=host
#
#      - name: Push image useing the master branch commit SHA.
#        if: ${{ github.ref == 'refs/heads/master' }}
#        run: |
#
#          python3 build_package_new.py ${{ inputs.image-type }} \
#            --push \
#            --tag ${{ github.sha }}



