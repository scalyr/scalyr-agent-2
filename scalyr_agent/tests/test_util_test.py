# Copyright 2014 Scalyr Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------
#
#

from __future__ import absolute_import

import os
import mock

from scalyr_agent.test_base import BaseScalyrLogCaptureTestCase

__all__ = [
    'LogCaptureClassTestCase'
]


class LogCaptureClassTestCase(BaseScalyrLogCaptureTestCase):
    """
    Test class which verified BaseScalyrLogCaptureTestCase works correctly.
    """
    def test_assertLogFileContainsRegex(self):
        # Log files should have been created in setUp()
        self.assertTrue(os.path.isfile(self.agent_log_path))
        self.assertTrue(os.path.isfile(self.agent_debug_log_path))

        # Write some data to the file and verify assertLogFileContainsRegex works correctly
        with open(self.agent_log_path, 'w') as fp:
            fp.write(r'line 1\line 2\line 3')

        self.assertLogFileContainsRegex(self.agent_log_path, r'line 1')
        self.assertLogFileContainsRegex(self.agent_log_path, r'line 2')
        self.assertLogFileContainsRegex(self.agent_log_path, r'line \d+')

        self.assertRaises(AssertionError, self.assertLogFileContainsRegex,
                          self.agent_log_path, r'line 4')
        self.assertRaises(AssertionError, self.assertLogFileContainsRegex,
                          self.agent_log_path, r'line \d+\d+')

    @mock.patch('__builtin__.print')
    def tearDown(self, mock_print):
        # Verify directory generated by the test is deleted as part of tearDown cleanup
        # if an assertion has not failed and verify no messages with log paths are printed
        self.assertTrue(os.path.isdir(self.logs_directory))

        self.assertEqual(len(mock_print.call_args_list), 0)

        self._BaseScalyrLogCaptureTestCase__assertion_failed = False
        super(LogCaptureClassTestCase, self).tearDown()

        self.assertFalse(os.path.isdir(self.logs_directory))
        self.assertEqual(len(mock_print.call_args_list), 0)

        # Verify path to the files is printed if the assertion fails
        self._BaseScalyrLogCaptureTestCase__assertion_failed = True
        super(LogCaptureClassTestCase, self).tearDown()

        self.assertEqual(len(mock_print.call_args_list), 2)

        print_message_1 = mock_print.call_args_list[0][0][0]
        print_message_2 = mock_print.call_args_list[1][0][0]

        expected_msg_1 = 'Storing agent log file for test "test_assertLogFileContainsRegex"'
        expected_msg_2 = 'Storing agent debug log file for test "test_assertLogFileContainsRegex"'

        self.assertRegexpMatches(print_message_1, expected_msg_1)
        self.assertRegexpMatches(print_message_2, expected_msg_2)
